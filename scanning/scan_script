#!/bin/bash

#####################
#TESTING PARAMETERS
#####################

if [ $# -ne 1 ]
then
        echo "Wrong number of arguments.. exiting"
        exit -1
elif [ $(id -u) -ne 0 ]
then
        echo "You must run this script as root.. exiting"
        exit -1
fi

script_start=`date +%s`;

#####################
#FUNCTIONS
#####################

netcat_connect() {
        host=$1
        port=$2
        nc -nvC $host -p$port -q60 2>&1 << NCCOMMANDS #-q60 = close after 60 seconds
a
b
c


aaa
bbbbbbbbb
cccccccccccccccc


NCCOMMANDS
}

netcat_connect_udp() {
        host=$1
        port=$2
        nc -nvC -u $host -p$port -q60 2>&1 << NCCOMMANDS #-q60 = close after 60 seconds
a
b
c


aaa
bbbbbbbbb
cccccccccccccccc


NCCOMMANDS
}

connect_shares() {
        host=$1
        port=$2

        echo ""
        echo "Port $port: connecting to IPC$ share..."
        smbclient //$host/IPC$ -N -p$port -q60 2>&1 << SMBCLIENTCOMMANDS
dir
exit
SMBCLIENTCOMMANDS

        echo ""
        echo "Port $port: connecting to C$ share..."
        smbclient //$host/C$ -N -p$port<< SMBCLIENTCOMMANDS
dir
exit
SMBCLIENTCOMMANDS

        echo ""
        echo "port $port: connecting to Admin$ share..."
        smbclient //$host/Admin$ -N -p$port << SMBCLIENTCOMMANDS
dir
exit
SMBCLIENTCOMMANDS
}

scan() {
        host=$1
        host_start=`date +%s`

        mkdir $host

#OPEN PORTS SCANS
        sudo nmap -sS -p- $host -Pn -n -T4 > ./$host/nmap_full_TCP_allports && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m TCP SYN scan (all ports)" &
        sudo nmap -sU $host -Pn -n -T4 > ./$host/nmap_UDP && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m UDP scan (1000 ports)"& #1000 most well-known ports
        
        wait
#############################################################################################################

#EXTRACTING LISTS OF OPEN PORTS
        #number of open TCP ports
        open_TCP_ports=`cat ./$host/nmap_full_TCP_allports |grep open |grep tcp |wc -l`
        
        #list of open TCP ports
        open_TCP_ports_list=""
        for port in `cat ./$host/nmap_full_TCP_allports |grep open |grep tcp |cut -d / -f 1`; do open_TCP_ports_list="$open_TCP_ports_list$port,"; done
        open_TCP_ports_list=`echo $open_TCP_ports_list |sed 's/.$//'` #removing last ","

        #number of open UDP ports
        open_UDP_ports=`cat ./$host/nmap_UDP |grep open |grep udp |wc -l`

        #list of open UDP ports
        open_UDP_ports_list=""
        for port in `cat ./$host/nmap_UDP |grep open |grep udp |cut -d / -f 1`; do open_UDP_ports_list="$open_UDP_ports_list$port,"; done
        open_UDP_ports_list=`echo $open_UDP_ports_list |sed 's/.$//'` #removing last ","

#VERSIONS AND SCRIPTS SCANS
        if [ $open_TCP_ports -ge 1 ]; then
                sudo nmap -sTCV -p $open_TCP_ports_list $host -Pn -n -T4 > ./$host/nmap_full_TCP_versions_scripts && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m TCP versions and scripts on open ports" &
        fi

        if [ $open_UDP_ports -ge 1 ]; then
                sudo nmap -sUCV -p $open_UDP_ports_list $host -Pn -n -T4 > ./$host/nmap_UDP_versions_scripts && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m UDP versions and scripts scan on open/open|filtered ports" &
        fi

#OS AGRESSIVE DETECTION
        if [ $open_TCP_ports -ge 1 ] && [ $open_UDP_ports -ge 1 ]; then
                sudo nmap -A $host -p T:$open_TCP_ports_list,U:$open_UDP_ports_list -Pn -n -T4 > ./$host/nmap_OS_agressive_detection &
        elif [ $open_TCP_ports -ge 1 ]; then
                sudo nmap -A $host -p $open_TCP_ports_list -Pn -n -T4 > ./$host/nmap_OS_agressive_detection && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m OS agressive detection" &
        fi

        wait
#############################################################################################################

#NETCAT ALL PORTS
#### TCP PORTS
        echo -e "\e[91m\e[1mTCP PORTS\e[0m" > ./$host/netcat_all_ports
        for port in `cat ./$host/nmap_full_TCP_versions_scripts |grep open |grep /tcp |cut -d / -f 1`; do
                netcat_connect $host $port >> ./$host/netcat_all_ports && echo "-----" >> ./$host/netcat_all_ports &
        done
        wait
        NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m netcatting all TCP ports"

        wait
#############################################################################################################

#### UDP PORTS
        echo "--------------------------------------------" >> ./$host/netcat_all_ports
        echo -e "\e[91m\e[1mUDP PORTS\e[0m" >> ./$host/netcat_all_ports
        for port in `cat ./$host/nmap_UDP_versions_scripts |grep open |grep /udp |cut -d / -f 1`; do
                netcat_connect_udp $host $port >> ./$host/netcat_all_ports && echo "-----" >> ./$host/netcat_all_ports &
        done
        wait
        NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m netcatting all UDP ports"

        wait
#############################################################################################################

#SMB ENUMERATION
        if [[ $open_TCP_ports_list == *"445"* ]] || [[ $open_TCP_ports_list == *"139"* ]]; then
                sudo enum4linux $host > ./$host/enum4linux 2>&1 && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m enum4linux" &
                sudo smbclient -L\\ -N -I $host 2>&1 > ./$host/smbclient_list_shares && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m smbclient listing shares" &
        fi

        if [[ $open_TCP_ports_list == *"445"* ]]; then
                sudo smbmap -u null -p "" -H $host -P 445 > ./$host/445_smbmap && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m smbmap on SMB port 445" &
                connect_shares $host "445" > ./$host/445_null_sessions && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m NULL sessions on SMB port 445" &
        fi

        if [[ $open_TCP_ports_list == *"139"* ]]; then
                sudo smbmap -u null -p "" -H $host -P 139 > ./$host/139_smbmap && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m smbmap on SMB port 139" &
                connect_shares $host "139" > ./$host/139_null_sessions && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m NULL sessions on SMB port 139" &
        fi

#DIRSEARCH AND NIKTO ON HTTP PORTS
        for port in `cat ./$host/nmap_full_TCP_versions_scripts |grep open |grep /tcp |grep -i http |grep -i -v https |cut -d / -f 1`; do

                sudo python3 /home/kali/Desktop/dirsearch/dirsearch.py -u http://$host:$port/ -e "txt,html,php,asp,aspx,jsp,bak,old,cgi" -w /usr/share/seclists/Discovery/Web-Content/common.txt -r -t 100 -f -F -R 2 > ./$host/{$port}_dirsearch_common.txt && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m dirsearch (common list, recursion 2) on port $port" &
                sudo python3 /home/kali/Desktop/dirsearch/dirsearch.py -u http://$ip:<PORT>/ -e "txt,html,php,asp,aspx,jsp,bak,old,cgi" -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -t 100 -f -F > ./$host/{$port}_dirsearch_medium.txt && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m dirsearch (medium list, no recursion) on port $port" &

                nikto -ask=no -h http://$host:$port/ > ./$host/{$port}_nikto.txt && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m nikto on HTTP port $port" &
        done

#GOBUSTER AND NIKTO ON HTTPS PORTS (dirsearch doesn't support ssl)
        for port in `cat ./$host/nmap_full_TCP_versions_scripts |grep open |grep /tcp |grep -i https |cut -d / -f 1`; do
                gobuster dir -x "txt,html,php,asp,aspx,jsp,bak,old,cgi" -r -k -u https://$host:$port/ -t 100 -w /usr/share/seclists/Discovery/Web-Content/common.txt > ./$host/{$port}_gobuster_common.txt && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m gobuster (common list, no recursion) on port $port" &
                gobuster dir -x "txt,html,php,asp,aspx,jsp,bak,old,cgi" -r -k -u https://$host:$port/ -t 100 -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt > ./$host/{$port}_gobuster_medium.txt && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m gobuster (medium list, no recursion) on port $port" &

                nikto -ask=no -h https://$host:$port/ > ./$host/{$port}_nikto.txt && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m nikto on HTTPS port $port" &
        done

#VULNERABILITY SCAN
        if [ $open_TCP_ports -ge 1 ]; then
                sudo nmap -sT --script +vuln -p $open_TCP_ports_list $host -Pn -n > ./$host/nmap_full_TCP_vulns && NOW=`date '+%H:%M:%S'` && echo -e "\e[93m\e[1m[$NOW]\e[0m \e[33m$host\e[0m TCP vulns scan" &
        fi

        wait
#############################################################################################################

#WRITING NMAP_ALL_IN_ONE
        echo "$host" > ./$host/nmap_all_in_one
        echo "" >> ./$host/nmap_all_in_one

        echo "--------------------------------------------" >> ./$host/nmap_all_in_one
        echo -e "\e[91m\e[1mTCP VERSIONS AND SCRIPTS\e[0m\e[92m" >> ./$host/nmap_all_in_one
        echo "" >> ./$host/nmap_all_in_one
        cat ./$host/nmap_full_TCP_versions_scripts >> ./$host/nmap_all_in_one

        if [ $open_UDP_ports -ge 1 ]; then
                echo "--------------------------------------------" >> ./$host/nmap_all_in_one
                echo -e "\e[91m\e[1mUDP VERSIONS AND SCRIPTS\e[0m\e[92m" >> ./$host/nmap_all_in_one
                echo "" >> ./$host/nmap_all_in_one
                cat ./$host/nmap_UDP_versions_scripts >> ./$host/nmap_all_in_one
        fi

        echo "--------------------------------------------" >> ./$host/nmap_all_in_one
        echo -e "\e[91m\e[1mOS AGRESSIVE DETECTION\e[0m\e[92m" >> ./$host/nmap_all_in_one
        echo "" >> ./$host/all_in_one
        cat ./$host/nmap_OS_agressive_detection >> ./$host/nmap_all_in_one

        echo "--------------------------------------------" >> ./$host/nmap_all_in_one
        echo -e "\e[91m\e[1mTCP VULNERABILITY ASSESSMENT\e[0m\e[92m" >> ./$host/nmap_all_in_one
        echo "" >> ./$host/nmap_all_in_one
        cat ./$host/nmap_full_TCP_vulns >> ./$host/nmap_all_in_one

        echo ""

#TIME SPENT ENUMERATING HOST
        host_end=`date +%s`
        echo -e "\e[93m\e[1m$host \e[34mscanned in $((host_end - host_start)) seconds\e[0m" >> ./$host/LOGS
        echo -e "\e[93m\e[1m$host \e[34mscanned in $((host_end - host_start)) seconds\e[0m"

        echo "$open_TCP_ports open TCP ports: $open_TCP_ports_list" >> ./$host/LOGS
        echo "$open_UDP_ports open UDP ports: $open_UDP_ports_list" >> ./$host/LOGS
        echo -e "\e[34m\e[1mTCP: $open_TCP_ports_list\e[0m"
        echo -e "\e[34m\e[1mUDP: $open_UDP_ports_list\e[0m"

        echo ""
}

#####################
#MAIN CODE
#####################

echo "";

NOW=`date '+%H:%M:%S'`;
echo -e "\e[1mScan initiated at $NOW\e[0m";

list_of_hosts="\e[93m\e[1mHosts: "
for host in `cat hosts`; do list_of_hosts="$list_of_hosts\e[0m\e[33m$host "; done
list_of_hosts="$list_of_hosts\e[0m";

echo -e "$list_of_hosts";

echo "";

#PARALLELIZING

for host in $(cat $1); do
        scan $host &
done

wait;

script_end=`date +%s`;
echo -e "\e[1mScript completed in $((script_end - script_start)) seconds\e[0m";
