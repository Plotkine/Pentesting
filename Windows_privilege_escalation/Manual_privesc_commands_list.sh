#___Hostname___: may reveal the function of the machine
#
#___Hostname___: may reveal the function of the machine
#
#___OS version/architecture___: kernel exploits
#
#___Processes___: processes running as privileged user may be of interest if they contain vulnerabilities
#
#___Network/Firewall___: could reveal other networks to pivot to
#could reveal port bindings on local machine that were not accessible by scanning
#firewall rules can facilitate port forwarding/tunneling if we know which inbound/outbound ports are filtered
#
#___Scheduled tasks___: we want to check here for insecure file permissions
#
#___Installed applications/patch level___: we want to find vulnerable applications that could lead to privesc
#
#___Readable/Writable files & directories___: looking to modify scripts or binaries executed under context of privileged account
#also sensitive files containing hard-coded credentials
#
#___Unmounted Disks___: not all drives are mounted at boot => we should look for unmounted drives
#we might want to mount unmounted partitions to search for interesting documents/credentials/...
#
#___Device drivers/Kernel modules___: get drivers/drivers versions/kernel version to look for exploits
#
#___Binaries That AutoElevate___: if we can run a binary that is autoelevating we could craft one or use it to elevate

######################################################################################################################

#---Users
whoami
net user student #more info on our user "student"
net user         #other users

#---Hostname
hostname

#---OS version/architecture
systeminfo | findstr /B /C:"OS Name" /C:"OS Version" /C:"System Type" #/B = match pattern at line beginning
                                                                      #/C = match pattern

#---(Unquoted paths service)
wmic service get name,displayname,pathname,startmode |findstr /i "Auto" |findstr /i /v "C:\Windows\\" |findstr /i /v """

#---Processes
tasklist /SVC #/SVC for processes mapped to specific Windows services
              #this does not list processes run by privileged users
#on windows we need privilegied account to see processes running by privileged users
#example: mysql can be interesting

#---Network/Firewall
ipconfig /all #check network interfaces
route print
netstat -ano #a = active TCP connections
             #n = display address and port number numerically
             #o = owner PID of the connection
netsh advfirewall show currentprofile         #see if active
netsh advfirewall firewall show rule name=all #see firewall rules
#e.g. a service may be accessible only on the loopback address

#---Scheduled tasks
schtasks /query /fo LIST /v #view scheduled tasks
                            #/query = display tasks
                            #/fo LIST = simple list format
                            #/v = verbose

#---Installed applications/patch level
wmic product get name, version, vendor #lists applications
                                       #but only those installed by the Windows Installer
wmic qfe get Caption, Description, HotFixID, InstalledOn #lists system-wide updates (security patches)
                                                         #if system patched a long-time ago -> juicy

#---Readable/Writable files & directories
accesschk.exe -uws "Everyone" "C:\Program Files" #enumerate Program Files for files/dir with "Everyone" permission
                                                 #-u = suppress errors
                                                 #-w = write access permission
                                                 #-s = recursive search
powershell.exe Get-ChildItem "C:\Program Files" -Recurse | Get-ACL | ?{$_.AccessToString -match "Everyone\sAllow\s\sModify"}
                                                 #same command but with powershell
                                                 #Get-ChildItem to enumerate everything under Program Files
                                                 #Get-Acl = retrieve permissions
                                                 #?{$_.AccessToString -match "Everyone\sAllow\s\sModify"} = results that can be modified by the "Everyone" group

#---Unmounted drives
mountvol #list all drives (currently mounted or not)

#---Device drivers/Kernel modules
powershell.exe driverquery.exe /v /fo csv | ConvertFrom-CSV | Select-Object ‘Display Name’, ‘Start Mode’, Path #lists loaded drivers
#the only reason we use powershell is to filter driverquery.exe output
powershell.exe Get-WmiObject Win32_PnPSignedDriver | Select-Object DeviceName, DriverVersion, Manufacturer #lists drivers and their versions
powershell.exe Get-WmiObject Win32_PnPSignedDriver | Select-Object DeviceName, DriverVersion, Manufacturer | Where-Object {$_.DeviceName -like "*VMware*"}
#lists drivers like *VMWare* and their versions (this is an example)

#---Binaries that autoelevate
reg query HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Installer
reg query HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\Installer #check status of AlwaysInstallElevated registry
                                                                           #if set to one ("0x1") in either HKEY_CURRENT_USER of HKEY_LOCAL_MACHINE,
                                                                           #any user can run Windows Installer packages with elevated privileges
                                                                           #=> we can craft an MSI file and run it with elevated privileges
